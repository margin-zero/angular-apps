{"version":3,"sources":["C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/$_gendir lazy","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app-routing.module.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app.module.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-add.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-add.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-edit.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-edit.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-list.component.css","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-list.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-list.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city.service.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-add.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-add.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-edit.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-edit.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-list.component.css","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-list.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-list.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation.service.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-add.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-add.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-edit.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-edit.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-list.component.css","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-list.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-list.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country.service.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/in-memory-data.service.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/location-list.component.css","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/location-list.component.html","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/location-list.component.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/environments/environment.ts","C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src-corporate/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/$$_gendir lazy\n// module id = ../../../../../src-corporate/$$_gendir lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CorporationListComponent }   from './corporation-list.component';\r\nimport { CorporationEditComponent }      from './corporation-edit.component';\r\nimport { CorporationAddComponent }      from './corporation-add.component';\r\nimport { CityListComponent }      from './city-list.component';\r\nimport { CityAddComponent }      from './city-add.component';\r\nimport { CityEditComponent }      from './city-edit.component';\r\nimport { CountryListComponent }      from './country-list.component';\r\nimport { CountryAddComponent }      from './country-add.component';\r\nimport { CountryEditComponent }     from './country-edit.component';\r\nimport { LocationListComponent }      from './location-list.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/corporation-list', pathMatch: 'full' },\r\n    { path: 'corporation-list',  component: CorporationListComponent },\r\n    { path: 'corporation-edit/:id', component: CorporationEditComponent },\r\n    { path: 'corporation-add', component: CorporationAddComponent },\r\n    { path: 'location-list',  component: LocationListComponent },\r\n    { path: 'city-list', component: CityListComponent },\r\n    { path: 'city-add', component: CityAddComponent },\r\n    { path: 'city-add/:id', component: CityAddComponent },\r\n    { path: 'city-edit/:id', component: CityEditComponent },\r\n    { path: 'country-list', component: CountryListComponent },\r\n    { path: 'country-add', component: CountryAddComponent },\r\n    { path: 'country-edit/:id', component: CountryEditComponent },\r\n    { path: '**', redirectTo: 'location-list', pathMatch: 'full' },\r\n  ];\r\n\r\n  @NgModule({\r\n    imports: [ RouterModule.forRoot(routes) ],\r\n    exports: [ RouterModule ]\r\n  })\r\n  export class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app-routing.module.ts","module.exports = \"<section>\\n   \\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <span class=\\\"h1\\\" class=\\\"navbar-brand mb-0\\\">{{title}}</span>\\n    \\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/corporation-list\\\">Korporacje <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/city-list\\\">Miasta</a>\\n        </li>\\n        <li class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/country-list\\\">Państwa</a>\\n        </li>\\n        <li class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/location-list\\\">Lokalizacje</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n</section>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app.component.html\n// module id = ../../../../../src-corporate/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [],\n\n})\n\nexport class AppComponent {\n\n  title = 'CorpoList';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app.component.ts","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule }    from '@angular/http';\nimport { FormsModule }   from '@angular/forms';\n\n// Imports for loading & configuring the in-memory web api\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService }  from './in-memory-data.service';\n\nimport { AppComponent }               from './app.component';\nimport { CorporationListComponent }   from './corporation-list.component';\nimport { CorporationAddComponent }    from './corporation-add.component';\nimport { CorporationEditComponent }   from './corporation-edit.component';\nimport { CityListComponent }          from './city-list.component';\nimport { CityAddComponent }           from './city-add.component';\nimport { CityEditComponent }          from './city-edit.component';\nimport { CountryListComponent }       from './country-list.component';\nimport { CountryAddComponent }        from './country-add.component';\nimport { CountryEditComponent }       from './country-edit.component';\nimport { LocationListComponent }      from './location-list.component';\n\nimport { CorporationService }   from './corporation.service';\nimport { CityService }          from './city.service';\nimport { CountryService }       from './country.service';\n\n\nimport { AppRoutingModule }     from './app-routing.module';\n\n@NgModule({\n\n  imports:      [\n    BrowserModule,\n    HttpModule,\n    InMemoryWebApiModule.forRoot(InMemoryDataService),\n    AppRoutingModule,\n    FormsModule\n  ],\n\n  declarations: [\n    AppComponent,\n    CorporationListComponent,\n    CorporationAddComponent,\n    CorporationEditComponent,\n    CityListComponent,\n    CityAddComponent,\n    CityEditComponent,\n    CountryListComponent,\n    CountryAddComponent,\n    CountryEditComponent,\n    LocationListComponent\n\n   ],\n\n  bootstrap: [ AppComponent ],\n\n  providers: [ CorporationService, CityService, CountryService ],\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/app.module.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-8 col-md-6 col-lg-4 edit-form\\\">\\r\\n            <h5 class=\\\"edit-form-header\\\">Dodaj miasto</h5>\\r\\n    \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCityName\\\">Nazwa: </label><label class=\\\"required\\\">( wymagana )</label>\\r\\n                <input  [(ngModel)]=\\\"cityName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCityName\\\" placeholder=\\\"nazwa miasta\\\" tabindex=\\\"1\\\" required/>\\r\\n            </div>\\r\\n    \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCountrySelect\\\">Państwo: </label><label class=\\\"required\\\">( wymagane )</label>\\r\\n                <select [(ngModel)]=\\\"countryId\\\" class=\\\"form-control\\\" id=\\\"inputCountrySelect\\\" tabindex=\\\"2\\\" required>\\r\\n                    <option *ngFor=\\\"let country of countries\\\" value={{country.id}}>{{country.name}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n    \\r\\n            <div class=\\\"form-group clearfix\\\">\\r\\n                <button (click)=\\\"add(cityName,countryId)\\\" class=\\\"btn btn-primary float-right\\\" tabindex=\\\"3\\\">Dodaj</button> \\r\\n                <button (click)=\\\"goBack()\\\" class=\\\"btn btn-danger float-left\\\" tabindex=\\\"0\\\">Powrót</button>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-add.component.html\n// module id = ../../../../../src-corporate/app/city-add.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\n\r\n\r\nimport { City } from './city';\r\nimport { Country } from './country';\r\n\r\nimport { CityService } from './city.service';\r\nimport { CountryService } from './country.service';\r\n\r\n@Component({\r\n    selector: 'city-add',\r\n    templateUrl: './city-add.component.html',\r\n    styleUrls: [],\r\n  })\r\n\r\nexport class CityAddComponent implements OnInit {\r\n\r\n    countryId: number;\r\n    country: Country;\r\n    countries: Country[];\r\n\r\n    constructor(\r\n        private countryService: CountryService,\r\n        private cityService: CityService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private location: Location\r\n      ) { }\r\n\r\n    goBack() {\r\n      this.location.back();\r\n    }\r\n\r\n    add(cityName: string, countryId: number): void {\r\n      cityName = cityName.trim();\r\n      if ( !cityName || !countryId ) {  return; }\r\n      this.cityService.create(cityName, 1 * countryId);\r\n      this.goBack();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.countryService.getCountry(+params.get('id')))\r\n      .subscribe(country => this.country = country);\r\n\r\n      this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.countryService.getCountries())\r\n      .subscribe(countries => this.countries = countries);\r\n\r\n      this.countryId = parseInt(this.route.snapshot.paramMap.get('id'), 10);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-add.component.ts","module.exports = \"<div *ngIf=\\\"city\\\" class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-8 col-md-6 col-lg-4 edit-form\\\">\\r\\n            <h5 class=\\\"edit-form-header\\\">Edytuj miasto: {{city.name}}</h5>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCityName\\\">Nazwa: </label><label class=\\\"required\\\">( wymagana )</label>\\r\\n                <input  [(ngModel)]=\\\"city.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCityName\\\" placeholder=\\\"nazwa miasta\\\" tabindex=\\\"1\\\" required/>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCountrySelect\\\">Państwo: </label><label class=\\\"required\\\">( wymagane )</label>\\r\\n                <select [(ngModel)]=\\\"countryId\\\" class=\\\"form-control\\\" id=\\\"inputCountrySelect\\\" tabindex=\\\"2\\\" required>\\r\\n                    <option *ngFor=\\\"let country of countries\\\" value={{country.id}}>{{country.name}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group clearfix\\\">\\r\\n                <button (click)=\\\"save()\\\" class=\\\"btn btn-primary float-right\\\" tabindex=\\\"3\\\">Zapisz</button> \\r\\n                <button (click)=\\\"goBack()\\\" class=\\\"btn btn-danger float-left\\\" tabindex=\\\"0\\\">Powrót</button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-edit.component.html\n// module id = ../../../../../src-corporate/app/city-edit.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\r\nimport { Component, OnInit }        from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\n\r\nimport { City }        from './city';\r\nimport { CityService } from './city.service';\r\nimport { Country } from './country';\r\nimport { CountryService } from './country.service';\r\n\r\n@Component({\r\n  selector: 'city-edit',\r\n  templateUrl: './city-edit.component.html',\r\n  styleUrls: []\r\n})\r\n\r\nexport class CityEditComponent implements OnInit {\r\n\r\n    city: City;\r\n    countries: Country[];\r\n    countryId: number;\r\n\r\n    constructor(\r\n        private cityService: CityService,\r\n        private countryService: CountryService,\r\n        private route: ActivatedRoute,\r\n        private location: Location\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.paramMap\r\n        .switchMap((params: ParamMap) => this.cityService.getCity(+params.get('id')))\r\n        .subscribe(city => this.city = city);\r\n\r\n        this.route.paramMap\r\n        .switchMap((params: ParamMap) => this.cityService.getCity(+params.get('id')))\r\n        .subscribe(city => this.countryId = city.country_id);\r\n\r\n        this.getCountries();\r\n    }\r\n\r\n    save(): void {\r\n        this.city.name = this.city.name.trim();\r\n        this.city.country_id = 1 * this.countryId;\r\n        if ( !this.city.name || !this.city.country_id) { return; }\r\n        this.cityService.update(this.city)\r\n          .then(() => this.goBack());\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n\r\n    getCountries(): void {\r\n        this.countryService.getCountries().then(countries => this.countries = countries);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-edit.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"tbody>tr{cursor:pointer}thead>tr>th:first-child{width:50px}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-list.component.css\n// module id = ../../../../../src-corporate/app/city-list.component.css\n// module chunks = main","module.exports = \"<section class=\\\"container-fluid\\\">\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>id</th>\\r\\n        <th>nazwa</th>\\r\\n        <th>państwo</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let city of cities\\\" (click)=\\\"onClick(city)\\\">\\r\\n        <td>{{city.id}}</td>\\r\\n        <td>{{city.name}}</td>\\r\\n        <!-- <td>{{city.country_id}}</td> -->\\r\\n        <td>{{countries.find(getCountry(city.country_id)).name}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <a routerLink=\\\"/city-add\\\" class=\\\"link-add\\\">[ dodaj miasto ]</a>\\r\\n</section>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-list.component.html\n// module id = ../../../../../src-corporate/app/city-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { City } from './city';\r\nimport { Country } from './country';\r\n\r\nimport { CityService } from './city.service';\r\nimport { CountryService } from './country.service';\r\n\r\n\r\n@Component({\r\n  selector: 'city-list',\r\n  templateUrl: './city-list.component.html',\r\n  styleUrls: ['./city-list.component.css'],\r\n})\r\n\r\nexport class CityListComponent implements OnInit {\r\n\r\n  cities: City[];\r\n  countries: Country[];\r\n\r\n  constructor(\r\n      private cityService: CityService,\r\n      private countryService: CountryService,\r\n      private router: Router\r\n  ) { }\r\n\r\n  getCities(): void {\r\n    this.cityService\r\n    .getCities()\r\n    .then(cities => this.cities = cities);\r\n  }\r\n\r\n  getCountries(): void {\r\n    this.countryService\r\n    .getCountries()\r\n    .then(countries => this.countries = countries);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCountries();\r\n    this.getCities();\r\n  }\r\n\r\n  onClick( city: City ) {\r\n    this.router.navigate(['./city-edit/' + city.id]);\r\n  }\r\n\r\n  getCity(city_id) {\r\n    return function(element) {\r\n      return element.id === city_id;\r\n    };\r\n  }\r\n\r\n  getCountry(country_id) {\r\n    return function(element) {\r\n      return element.id === country_id;\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city-list.component.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { City } from './city';\r\n\r\n@Injectable()\r\n\r\nexport class CityService {\r\n\r\n    private headers = new Headers({'Content-Type': 'application/json'});\r\n    private citiesUrl = 'api/cities'; // url to web api\r\n\r\n    constructor (private http: Http) {}\r\n\r\n    getCities(): Promise<City[]> {\r\n\r\n           return this.http.get(this.citiesUrl)\r\n           .toPromise()\r\n           .then(response => response.json() as City[])\r\n           .catch(this.handleError);\r\n\r\n    }\r\n\r\n    getCity(id: number): Promise<City> {\r\n        const url = `${this.citiesUrl}/${id}`;\r\n        return this.http.get(url)\r\n          .toPromise()\r\n          .then(response => response.json() as City)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('UWAGA !!! An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n      }\r\n\r\n    delete(id: number): Promise<void> {\r\n        const url = `${this.citiesUrl}/${id}`;\r\n        return this.http.delete(url, {headers: this.headers})\r\n          .toPromise()\r\n          .then(() => null)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n    create(cityName: string, countryId: number): Promise<City> {\r\n        return this.http\r\n        .post(this.citiesUrl, JSON.stringify({name: cityName, country_id: countryId}), {headers: this.headers})\r\n        .toPromise()\r\n        .then(res => res.json() as City)\r\n        .catch(this.handleError);\r\n    }\r\n\r\n\r\n    update(city: City): Promise<City> {\r\n        const url = `${this.citiesUrl}/${city.id}`;\r\n        return this.http\r\n          .put(url, JSON.stringify(city), {headers: this.headers})\r\n          .toPromise()\r\n          .then(() => city)\r\n          .catch(this.handleError);\r\n      }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/city.service.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n        <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"col-sm-8 col-md-6 col-lg-4 edit-form\\\">\\r\\n                <h5 class=\\\"edit-form-header\\\">Dodaj korporację</h5>\\r\\n        \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"inputCorporationName\\\">Nazwa: </label><label class=\\\"required\\\">( wymagana )</label>\\r\\n                    <input  [(ngModel)]=\\\"corporationName\\\" \\r\\n                        type=\\\"text\\\" \\r\\n                        class=\\\"form-control\\\" \\r\\n                        id=\\\"inputCorporationName\\\" \\r\\n                        placeholder=\\\"nazwa korporacji\\\" \\r\\n                        tabindex=\\\"1\\\" \\r\\n                        value =\\\"\\\" required/>\\r\\n                </div>\\r\\n        \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"inputCitySelect\\\">Miasto: </label><label class=\\\"required\\\">( wymagane )</label>\\r\\n                    <select [(ngModel)]=\\\"cityId\\\" class=\\\"form-control\\\" id=\\\"inputCitySelect\\\" tabindex=\\\"2\\\" required>\\r\\n                        <option value=0>--- wybierz ---</option>                        \\r\\n                        <option *ngFor=\\\"let city of cities\\\" value={{city.id}}>{{city.name}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"inputCEO\\\">CEO: </label>\\r\\n                        <input  #corporationCeoName type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCEO\\\" placeholder=\\\"CEO\\\" tabindex=\\\"3\\\" />\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"inputWWW\\\">www: </label>\\r\\n                        <input  #corporationWebsite type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputWWW\\\" placeholder=\\\"www\\\" tabindex=\\\"4\\\" />\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"inputEmail\\\">e-mail: </label>\\r\\n                        <input  #corporationEmail type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"email kontaktowy\\\" tabindex=\\\"5\\\"/>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group clearfix\\\">\\r\\n                    <button (click)=\\\"add(corporationName, corporationCeoName.value, corporationWebsite.value, corporationEmail.value)\\\" class=\\\"btn btn-primary float-right\\\" tabindex=\\\"6\\\">Zapisz</button> \\r\\n                    <button (click)=\\\"goBack()\\\" class=\\\"btn btn-danger float-left\\\" tabindex=\\\"0\\\">Powrót</button>\\r\\n                </div>\\r\\n        \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-add.component.html\n// module id = ../../../../../src-corporate/app/corporation-add.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\n\r\nimport { City } from './city';\r\nimport { Corporation } from './corporation';\r\n\r\nimport { CityService } from './city.service';\r\nimport { CorporationService } from './corporation.service';\r\n\r\n\r\n@Component({\r\n    selector: 'corporation-add',\r\n    templateUrl: './corporation-add.component.html',\r\n    styleUrls: [],\r\n})\r\n\r\nexport class CorporationAddComponent implements OnInit {\r\n\r\n    cities: City[];\r\n    cityId = 0;\r\n    corporation: Corporation;\r\n\r\n    constructor(\r\n        private cityService: CityService,\r\n        private corporationService: CorporationService,\r\n        private route: ActivatedRoute,\r\n        private location: Location\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getCities();\r\n    }\r\n\r\n    goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    getCities(): void {\r\n        this.cityService.getCities().then(cities => this.cities = cities);\r\n    }\r\n\r\n    add(name: string, ceoName: string, website: string, email: string): void {\r\n        name = name.trim();\r\n        ceoName = ceoName.trim();\r\n        website = website.trim();\r\n        email = email.trim();\r\n\r\n        if ( !name || !this.cityId ) { return; }\r\n        this.corporationService.create(name, 1 * this.cityId, email, ceoName, website);\r\n        this.goBack();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-add.component.ts","module.exports = \"<div *ngIf=\\\"corporation\\\" class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-8 col-md-6 col-lg-4 edit-form\\\">\\r\\n            <h5 class=\\\"edit-form-header\\\">Edytuj korporację: {{corporation.name}}</h5>\\r\\n    \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCorporationName\\\">Nazwa: </label><label class=\\\"required\\\">( wymagana )</label>\\r\\n                <input  [(ngModel)]=\\\"corporation.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCorporationName\\\" placeholder=\\\"nazwa korporacji\\\" tabindex=\\\"1\\\" required/>\\r\\n            </div>\\r\\n    \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCitySelect\\\">Miasto: </label><label class=\\\"required\\\">( wymagane )</label>\\r\\n                <select [(ngModel)]=\\\"cityId\\\" class=\\\"form-control\\\" id=\\\"inputCitySelect\\\" tabindex=\\\"2\\\">\\r\\n                    <option *ngFor=\\\"let city of cities\\\" value={{city.id}}>{{city.name}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"inputCEO\\\">CEO: </label>\\r\\n                    <input  [(ngModel)]=\\\"corporation.ceo_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCEO\\\" placeholder=\\\"CEO\\\" tabindex=\\\"3\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"inputWWW\\\">www: </label>\\r\\n                    <input  [(ngModel)]=\\\"corporation.website\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputWWW\\\" placeholder=\\\"www\\\" tabindex=\\\"4\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"inputEmail\\\">e-mail: </label>\\r\\n                    <input  [(ngModel)]=\\\"corporation.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"email kontaktowy\\\" tabindex=\\\"5\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group clearfix\\\">\\r\\n                <button (click)=\\\"save()\\\" class=\\\"btn btn-primary float-right\\\" tabindex=\\\"6\\\">Zapisz</button> \\r\\n                <button (click)=\\\"goBack()\\\" class=\\\"btn btn-danger float-left\\\" tabindex=\\\"0\\\">Powrót</button>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-edit.component.html\n// module id = ../../../../../src-corporate/app/corporation-edit.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\n\r\nimport { CorporationService } from './corporation.service';\r\nimport { CityService } from './city.service';\r\n\r\nimport { Corporation } from './corporation';\r\nimport { City } from './city';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'corporation-edit',\r\n  templateUrl: './corporation-edit.component.html',\r\n  styleUrls: [],\r\n})\r\n\r\nexport class CorporationEditComponent implements OnInit {\r\n\r\n  cities: City[];\r\n  corporation: Corporation;\r\n  cityId: number;\r\n\r\n  constructor(\r\n    private corporationService: CorporationService,\r\n    private cityService: CityService,\r\n    private route: ActivatedRoute,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.corporationService.getCorporation(+params.get('id')))\r\n      .subscribe(corporation => this.corporation = corporation);\r\n\r\n      this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.corporationService.getCorporation(+params.get('id')))\r\n      .subscribe(corporation => this.cityId = corporation.city);\r\n\r\n      this.getCities();\r\n  }\r\n\r\n  save(): void {\r\n    this.corporation.name      = this.corporation.name.trim();\r\n    this.corporation.ceo_name  = this.corporation.ceo_name.trim();\r\n    this.corporation.website = this.corporation.website.trim();\r\n    this.corporation.email = this.corporation.email.trim();\r\n\r\n    this.corporation.city = 1 * this.cityId;\r\n\r\n\r\n    if ( !this.corporation.name || !this.corporation.city) { return; }\r\n    this.corporationService.update(this.corporation)\r\n      .then(() => this.goBack());\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  getCities(): void {\r\n    this.cityService.getCities().then(cities => this.cities = cities);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-edit.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"tbody>tr{cursor:pointer}thead>tr>th:first-child{width:50px}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-list.component.css\n// module id = ../../../../../src-corporate/app/corporation-list.component.css\n// module chunks = main","module.exports = \"<section class=\\\"container-fluid\\\">\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>id</th>\\r\\n        <th>nazwa</th>\\r\\n        <th>miasto</th>\\r\\n        <th>państwo</th>\\r\\n        <th>CEO</th>\\r\\n        <th>website</th>\\r\\n        <th>email</th>\\r\\n        <th>&nbsp;</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let corporation of corporations\\\">\\r\\n\\r\\n        <td (click)=\\\"onClick(corporation)\\\">{{corporation.id}}</td>\\r\\n        <td (click)=\\\"onClick(corporation)\\\">{{corporation.name}}</td>\\r\\n        <td (click)=\\\"onClick(corporation)\\\">{{cities.find(getCity(corporation.city)).name}}</td>\\r\\n        <td (click)=\\\"onClick(corporation)\\\">{{countries.find(getCountry(cities.find(getCity(corporation.city)).country_id)).name}}</td>\\r\\n        <td (click)=\\\"onClick(corporation)\\\">{{corporation.ceo_name}}</td>\\r\\n        <td (click)=\\\"onClick(corporation)\\\">{{corporation.website}}</td>\\r\\n        <td (click)=\\\"onClick(corporation)\\\">{{corporation.email}}</td>\\r\\n\\r\\n        <td><button (click)=\\\"deleteCorporation(corporation)\\\" class=\\\"btn btn-danger float-right\\\">Usuń</button></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <a routerLink=\\\"/corporation-add\\\" class=\\\"link-add\\\">[ dodaj korporację ]</a>\\r\\n</section>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-list.component.html\n// module id = ../../../../../src-corporate/app/corporation-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Corporation } from './corporation';\r\nimport { City } from './city';\r\nimport { Country } from './country';\r\n\r\nimport { CorporationService } from './corporation.service';\r\nimport { CityService } from './city.service';\r\nimport { CountryService } from './country.service';\r\n\r\n\r\n@Component({\r\n  selector: 'corporation-list',\r\n  templateUrl: './corporation-list.component.html',\r\n  styleUrls: ['./corporation-list.component.css'],\r\n})\r\n\r\nexport class CorporationListComponent implements OnInit {\r\n\r\n  corporations: Corporation[];\r\n  cities: City[];\r\n  countries: Country[];\r\n  selectedCorporation: Corporation;\r\n\r\n  constructor(\r\n    private corporationService: CorporationService,\r\n    private cityService: CityService,\r\n    private countryService: CountryService,\r\n    private router: Router) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getCountries();\r\n    this.getCities();\r\n    this.getCorporations();\r\n  }\r\n\r\n  getCorporations(): void {\r\n    this.corporationService\r\n    .getCorporations()\r\n    .then(corporations => this.corporations = corporations);\r\n  }\r\n\r\n  getCities(): void {\r\n    this.cityService\r\n    .getCities()\r\n    .then(cities => this.cities = cities);\r\n  }\r\n\r\n  getCountries(): void {\r\n    this.countryService\r\n    .getCountries()\r\n    .then(countries => this.countries = countries);\r\n  }\r\n\r\n\r\n  onClick( corporation: Corporation ) {\r\n    this.selectedCorporation = corporation;\r\n    this.router.navigate(['./corporation-edit/' + this.selectedCorporation.id]);\r\n  }\r\n\r\n  getCity(city_id) {\r\n    return function(element) {\r\n      return element.id === city_id;\r\n    };\r\n  }\r\n\r\n  getCountry(country_id) {\r\n    return function(element) {\r\n      return element.id === country_id;\r\n    };\r\n  }\r\n\r\n  deleteCorporation(corporation: Corporation): void {\r\n    this.corporationService\r\n        .delete(corporation.id)\r\n        .then(() => {\r\n          this.corporations = this.corporations.filter(h => h !== corporation);\r\n        });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation-list.component.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Corporation } from './corporation';\r\n\r\n@Injectable()\r\n\r\nexport class CorporationService {\r\n\r\n    private headers = new Headers({'Content-Type': 'application/json'});\r\n    private corporationsUrl = 'api/corporations'; // url to web api\r\n\r\n    constructor (private http: Http) {}\r\n\r\n    getCorporations(): Promise<Corporation[]> {\r\n\r\n           return this.http.get(this.corporationsUrl)\r\n           .toPromise()\r\n           .then(response => response.json() as Corporation[])\r\n           .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('UWAGA !!! An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n    getCorporation( id: number ): Promise<Corporation> {\r\n        return this.getCorporations()\r\n        .then(corporations => corporations.find(corporation => corporation.id === id));\r\n    }\r\n\r\n    update(corporation: Corporation): Promise<Corporation> {\r\n        const url = `${this.corporationsUrl}/${corporation.id}`;\r\n        return this.http\r\n          .put(url, JSON.stringify(corporation), {headers: this.headers})\r\n          .toPromise()\r\n          .then(() => corporation)\r\n          .catch(this.handleError);\r\n      }\r\n\r\n    create(name: string, city: number, email: string, ceo_name: string, website: string): Promise<Corporation> {\r\n        return this.http\r\n        .post(this.corporationsUrl, JSON.stringify({\r\n            name: name, city: city, email: email, ceo_name: ceo_name, website: website }), {headers: this.headers})\r\n        .toPromise()\r\n        .then(res => res.json() as Corporation)\r\n        .catch(this.handleError);\r\n    }\r\n\r\n    delete(id: number): Promise<void> {\r\n        const url = `${this.corporationsUrl}/${id}`;\r\n        return this.http\r\n          .delete(url, {headers: this.headers})\r\n          .toPromise()\r\n          .then(() => null)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/corporation.service.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-8 col-md-6 col-lg-4 edit-form\\\">\\r\\n            <h5 class=\\\"edit-form-header\\\">Dodaj państwo</h5>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCountryName\\\">Nazwa: </label><label class=\\\"required\\\">( wymagana )</label>\\r\\n                <input  [(ngModel)]=\\\"countryName\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCountryName\\\" placeholder=\\\"nazwa państwa\\\" tabindex=\\\"1\\\" required />\\r\\n            </div>\\r\\n    \\r\\n            <div class=\\\"form-group clearfix\\\">\\r\\n                <button (click)=\\\"add(countryName)\\\" class=\\\"btn btn-primary float-right\\\" tabindex=\\\"2\\\">Zapisz</button> \\r\\n                <button (click)=\\\"goBack()\\\" class=\\\"btn btn-danger float-left\\\" tabindex=\\\"0\\\">Powrót</button>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-add.component.html\n// module id = ../../../../../src-corporate/app/country-add.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\n\r\n\r\nimport { Country } from './country';\r\n\r\nimport { CountryService } from './country.service';\r\n\r\n@Component({\r\n    selector: 'country-add',\r\n    templateUrl: './country-add.component.html',\r\n    styleUrls: [],\r\n  })\r\n\r\nexport class CountryAddComponent {\r\n\r\n    constructor(\r\n        private countryService: CountryService,\r\n        private router: Router,\r\n        private location: Location\r\n      ) { }\r\n\r\n    goBack() {\r\n      this.location.back();\r\n    }\r\n\r\n    add (countryName: string): void {\r\n      countryName = countryName.trim();\r\n      if (!countryName) { return; }\r\n      this.countryService.create(countryName);\r\n      this.location.back();\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-add.component.ts","module.exports = \"<div *ngIf=\\\"country\\\" class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-sm-8 col-md-6 col-lg-4 edit-form\\\">\\r\\n            <h5 class=\\\"edit-form-header\\\">Edytuj państwo: {{country.name}}</h5>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputCountryName\\\">Nazwa: </label><label class=\\\"required\\\">( wymagana )</label>\\r\\n                <input  [(ngModel)]=\\\"country.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCountryName\\\" placeholder=\\\"nazwa państwa\\\" tabindex=\\\"1\\\" required/>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group clearfix\\\">\\r\\n                <button (click)=\\\"save()\\\" class=\\\"btn btn-primary float-right\\\" tabindex=\\\"3\\\">Zapisz</button> \\r\\n                <button (click)=\\\"goBack()\\\" class=\\\"btn btn-danger float-left\\\" tabindex=\\\"0\\\">Powrót</button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-edit.component.html\n// module id = ../../../../../src-corporate/app/country-edit.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\r\nimport { Component, OnInit }        from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\n\r\nimport { Country }        from './country';\r\nimport { CountryService } from './country.service';\r\n\r\n@Component({\r\n  selector: 'country-edit',\r\n  templateUrl: './country-edit.component.html',\r\n  styleUrls: []\r\n})\r\n\r\nexport class CountryEditComponent implements OnInit {\r\n\r\n    country: Country;\r\n\r\n    constructor(\r\n        private countryService: CountryService,\r\n        private route: ActivatedRoute,\r\n        private location: Location\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.paramMap\r\n        .switchMap((params: ParamMap) => this.countryService.getCountry(+params.get('id')))\r\n        .subscribe(country => this.country = country);\r\n    }\r\n\r\n    save(): void {\r\n        this.country.name = this.country.name.trim();\r\n        if ( !this.country.name ) { return; }\r\n        this.countryService.update(this.country)\r\n          .then(() => this.goBack());\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-edit.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"tbody>tr{cursor:pointer}thead>tr>th:first-child{width:50px}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-list.component.css\n// module id = ../../../../../src-corporate/app/country-list.component.css\n// module chunks = main","module.exports = \"<section class=\\\"container-fluid\\\">\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>id</th>\\r\\n        <th>nazwa</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let country of countries\\\" (click)=\\\"onClick(country)\\\">\\r\\n        <td>{{country.id}}</td>\\r\\n        <td>{{country.name}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <a routerLink=\\\"/country-add\\\" class=\\\"link-add\\\">[ dodaj państwo ]</a>\\r\\n</section>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-list.component.html\n// module id = ../../../../../src-corporate/app/country-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Country } from './country';\r\n\r\nimport { CountryService } from './country.service';\r\n\r\n\r\n@Component({\r\n  selector: 'country-list',\r\n  templateUrl: './country-list.component.html',\r\n  styleUrls: ['./country-list.component.css'],\r\n})\r\n\r\nexport class CountryListComponent implements OnInit {\r\n\r\n  countries: Country[];\r\n\r\n  constructor(\r\n      private countryService: CountryService,\r\n      private router: Router\r\n  ) { }\r\n\r\n  getCountries(): void {\r\n    this.countryService\r\n    .getCountries()\r\n    .then(countries => this.countries = countries);\r\n}\r\n\r\n  ngOnInit(): void {\r\n    this.getCountries();\r\n  }\r\n\r\n  onClick( country: Country ) {\r\n    this.router.navigate(['./country-edit/' + country.id]);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country-list.component.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Country } from './country';\r\n\r\n\r\n\r\n@Injectable()\r\n\r\nexport class CountryService {\r\n\r\n    private headers = new Headers({'Content-Type': 'application/json'});\r\n    private countriesUrl = 'api/countries'; // url to web api\r\n\r\n    constructor (private http: Http) {}\r\n\r\n    getCountries(): Promise<Country[]> {\r\n\r\n           return this.http.get(this.countriesUrl)\r\n           .toPromise()\r\n           .then(response => response.json() as Country[])\r\n           .catch(this.handleError);\r\n\r\n    }\r\n\r\n    getCountry(id: number): Promise<Country> {\r\n        const url = `${this.countriesUrl}/${id}`;\r\n        return this.http.get(url)\r\n          .toPromise()\r\n          .then(response => response.json() as Country)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('UWAGA !!! An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n    delete(id: number): Promise<void> {\r\n        const url = `${this.countriesUrl}/${id}`;\r\n        return this.http\r\n          .delete(url, {headers: this.headers})\r\n          .toPromise()\r\n          .then(() => null)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n    create(countryName: string): Promise<Country> {\r\n        return this.http\r\n          .post(this.countriesUrl, JSON.stringify({name: countryName}), {headers: this.headers})\r\n          .toPromise()\r\n          .then(res => res.json() as Country)\r\n          .catch(this.handleError);\r\n    }\r\n\r\n    update(country: Country): Promise<Country> {\r\n        const url = `${this.countriesUrl}/${country.id}`;\r\n        return this.http\r\n          .put(url, JSON.stringify(country), {headers: this.headers})\r\n          .toPromise()\r\n          .then(() => country)\r\n          .catch(this.handleError);\r\n      }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/country.service.ts","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    const countries = [\r\n      { id: 1, name: 'Albania' },\r\n      { id: 2, name: 'Belgia' },\r\n      { id: 3, name: 'Chorwacja' },\r\n      { id: 4, name: 'Dania' },\r\n      { id: 5, name: 'Estonia' },\r\n      { id: 6, name: 'Polska'},\r\n      { id: 7, name: 'Rosja' }\r\n    ];\r\n\r\n    const cities = [\r\n      { id:  1, name: 'Tirana', country_id : 1 },\r\n      { id:  2, name: 'Bruksela', country_id: 2 },\r\n      { id:  3, name: 'Dubrovnik', country_id: 3 },\r\n      { id:  4, name: 'Kopenhaga', country_id: 4 },\r\n      { id:  5, name: 'Tallin', country_id: 5 },\r\n      { id:  6, name: 'Charelroi', country_id: 2},\r\n      { id:  7, name: 'Brugge', country_id: 2},\r\n      { id:  8, name: 'Warszawa', country_id: 6},\r\n      { id:  9, name: 'Wrocław', country_id: 6},\r\n      { id: 10, name: 'Gdańsk', country_id: 6},\r\n      { id: 11, name: 'Kraków', country_id: 6},\r\n      { id: 12, name: 'Poznań', country_id: 6}\r\n    ];\r\n\r\n    const corporations = [\r\n      { id: 1, name: 'Albanian Corp.', city: 1, ceo_name: 'Adalina Agalliu',\r\n        website: 'www.albanian-corp.com', email: 'office@albanian-corp.com' },\r\n      { id: 2, name: 'Belgian Choco',  city: 2, ceo_name: 'Bruno Chocolatti',\r\n        website: 'www.belgian-choco.com', email: 'bureau@belgian-choco.com' },\r\n      { id: 3, name: 'Croatian Holidays', city: 3, ceo_name: 'Zarko Zeljic',\r\n        website: 'www.croatian-holidays.com', email: 'office@croatian-holidays.com' },\r\n      { id: 4, name: 'Kopenhagen Mermaid', city: 4, ceo_name: 'Stellan Hangvard',\r\n        website: 'www.kopenhagen-mermaid.com', email: 'office@kopenhagen-mermaid.com' },\r\n      { id: 5, name: 'Tallin Sound Systems', city: 5, ceo_name: 'Stobe Kvinuus',\r\n        website: 'www.tallinss.com', email: 'office@tallinss.com' }\r\n    ];\r\n\r\n\r\n    return {countries, cities, corporations};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/in-memory-data.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"tbody>tr>td button{float:none;font-size:1rem;padding:5px}tbody>tr>td:nth-child(1){padding-right:40px}.city-link{margin-right:20px}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/location-list.component.css\n// module id = ../../../../../src-corporate/app/location-list.component.css\n// module chunks = main","module.exports = \"<section class=\\\"container-fluid\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n            <th>państwo</th>\\r\\n            <th>miasta</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let country of countries\\\">\\r\\n            <td>\\r\\n                <a routerLink=\\\"/country-edit/{{country.id}}\\\">{{country.name}}</a>\\r\\n                <span class=\\\"button-delete\\\" title=\\\"usuń państwo: {{country.name}}\\\" *ngIf=\\\"countryHasCities(country.id)===false\\\" (click)=\\\"deleteCountry(country); $event.stopPropagation()\\\">&times;</span>\\r\\n            </td>\\r\\n            <td>\\r\\n                <ng-template ngFor let-city [ngForOf]=\\\"cities\\\">\\r\\n                    <span class=\\\"city-link\\\" *ngIf=\\\"city.country_id == country.id\\\">\\r\\n                        <a routerLink=\\\"/city-edit/{{city.id}}\\\">{{city.name}}</a>&nbsp;<span class=\\\"button-delete\\\" title=\\\"usuń miasto: {{city.name}}\\\" *ngIf=\\\"cityHasCorporations(city.id)==false\\\" (click)=\\\"deleteCity(city); $event.stopPropagation()\\\">&times;</span>\\r\\n                    </span>\\r\\n                </ng-template>\\r\\n                <a routerLink=\\\"/city-add/{{country.id}}\\\" class=\\\"link-add\\\">[&nbsp;dodaj&nbsp;miasto&nbsp;]</a>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <a routerLink=\\\"/country-add\\\" class=\\\"link-add\\\">[&nbsp;dodaj&nbsp;państwo&nbsp;]</a>\\r\\n\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/location-list.component.html\n// module id = ../../../../../src-corporate/app/location-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { City } from './city';\r\nimport { Country } from './country';\r\nimport { Corporation } from './corporation';\r\n\r\nimport { CityService } from './city.service';\r\nimport { CountryService } from './country.service';\r\nimport { CorporationService } from './corporation.service';\r\n\r\n@Component({\r\n  selector: 'location-list',\r\n  templateUrl: './location-list.component.html',\r\n  styleUrls: ['./location-list.component.css'],\r\n})\r\n\r\nexport class LocationListComponent implements OnInit {\r\n\r\n  cities: City[];\r\n  countries: Country[];\r\n  corporations: Corporation[];\r\n\r\n  constructor(\r\n      private cityService: CityService,\r\n      private countryService: CountryService,\r\n      private corporationService: CorporationService\r\n    ) { }\r\n\r\n  getCities(): void {\r\n    this.cityService.getCities().then(cities => this.cities = cities);\r\n  }\r\n\r\n  getCountries(): void {\r\n    this.countryService.getCountries().then(countries => this.countries = countries);\r\n  }\r\n\r\n  getCorporations(): void {\r\n    this.corporationService.getCorporations().then(corporations => this.corporations = corporations);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCorporations();\r\n    this.getCities();\r\n    this.getCountries();\r\n  }\r\n\r\n  findElement(arr, propName, propValue) {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i][propName] === propValue) {\r\n        return arr[i];\r\n      }\r\n    }\r\n    // will return undefined if not found; you could return a default instead\r\n  }\r\n\r\n  countryHasCities(country_id) {\r\n    for (let i = 0; i < this.cities.length; i++) {\r\n      if ((1 * this.cities[i].country_id) === country_id) {  return true; }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  cityHasCorporations(city) {\r\n    for (let i = 0; i < this.corporations.length; i++) {\r\n      if (this.corporations[i].city === city) { return true; }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deleteCountry(country: Country): void {\r\n    this.countryService\r\n        .delete(country.id)\r\n        .then(() => {\r\n          this.countries = this.countries.filter(h => h !== country);\r\n        });\r\n  }\r\n\r\n  deleteCity(city: City): void {\r\n    this.cityService\r\n        .delete(city.id)\r\n        .then(() => {\r\n          this.cities = this.cities.filter(h => h !== city);\r\n        });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/app/location-list.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Tomek/Documents/WEBDEVELOPER/GitHub_projects/angular4_apps/angular-apps/src-corporate/main.ts"],"sourceRoot":"webpack:///"}